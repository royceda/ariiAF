<?php

namespace Proxies\__CG__\Arii\CoreBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Spooler extends \Arii\CoreBundle\Entity\Spooler implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'Arii\\CoreBundle\\Entity\\Spooler' . "\0" . 'id', '' . "\0" . 'Arii\\CoreBundle\\Entity\\Spooler' . "\0" . 'name', '' . "\0" . 'Arii\\CoreBundle\\Entity\\Spooler' . "\0" . 'description', '' . "\0" . 'Arii\\CoreBundle\\Entity\\Spooler' . "\0" . 'scheduler', '' . "\0" . 'Arii\\CoreBundle\\Entity\\Spooler' . "\0" . 'member', '' . "\0" . 'Arii\\CoreBundle\\Entity\\Spooler' . "\0" . 'cluster_options', '' . "\0" . 'Arii\\CoreBundle\\Entity\\Spooler' . "\0" . 'connection', '' . "\0" . 'Arii\\CoreBundle\\Entity\\Spooler' . "\0" . 'transfer', '' . "\0" . 'Arii\\CoreBundle\\Entity\\Spooler' . "\0" . 'db', '' . "\0" . 'Arii\\CoreBundle\\Entity\\Spooler' . "\0" . 'smtp', '' . "\0" . 'Arii\\CoreBundle\\Entity\\Spooler' . "\0" . 'http', '' . "\0" . 'Arii\\CoreBundle\\Entity\\Spooler' . "\0" . 'https', '' . "\0" . 'Arii\\CoreBundle\\Entity\\Spooler' . "\0" . 'osjs', '' . "\0" . 'Arii\\CoreBundle\\Entity\\Spooler' . "\0" . 'supervisor', '' . "\0" . 'Arii\\CoreBundle\\Entity\\Spooler' . "\0" . 'primary', '' . "\0" . 'Arii\\CoreBundle\\Entity\\Spooler' . "\0" . 'site', '' . "\0" . 'Arii\\CoreBundle\\Entity\\Spooler' . "\0" . 'licence', '' . "\0" . 'Arii\\CoreBundle\\Entity\\Spooler' . "\0" . 'install_path', '' . "\0" . 'Arii\\CoreBundle\\Entity\\Spooler' . "\0" . 'user_path', '' . "\0" . 'Arii\\CoreBundle\\Entity\\Spooler' . "\0" . 'events', '' . "\0" . 'Arii\\CoreBundle\\Entity\\Spooler' . "\0" . 'os_target', '' . "\0" . 'Arii\\CoreBundle\\Entity\\Spooler' . "\0" . 'version', '' . "\0" . 'Arii\\CoreBundle\\Entity\\Spooler' . "\0" . 'install_date', '' . "\0" . 'Arii\\CoreBundle\\Entity\\Spooler' . "\0" . 'status', '' . "\0" . 'Arii\\CoreBundle\\Entity\\Spooler' . "\0" . 'status_date', '' . "\0" . 'Arii\\CoreBundle\\Entity\\Spooler' . "\0" . 'timezone', '' . "\0" . 'Arii\\CoreBundle\\Entity\\Spooler' . "\0" . 'remote');
        }

        return array('__isInitialized__', '' . "\0" . 'Arii\\CoreBundle\\Entity\\Spooler' . "\0" . 'id', '' . "\0" . 'Arii\\CoreBundle\\Entity\\Spooler' . "\0" . 'name', '' . "\0" . 'Arii\\CoreBundle\\Entity\\Spooler' . "\0" . 'description', '' . "\0" . 'Arii\\CoreBundle\\Entity\\Spooler' . "\0" . 'scheduler', '' . "\0" . 'Arii\\CoreBundle\\Entity\\Spooler' . "\0" . 'member', '' . "\0" . 'Arii\\CoreBundle\\Entity\\Spooler' . "\0" . 'cluster_options', '' . "\0" . 'Arii\\CoreBundle\\Entity\\Spooler' . "\0" . 'connection', '' . "\0" . 'Arii\\CoreBundle\\Entity\\Spooler' . "\0" . 'transfer', '' . "\0" . 'Arii\\CoreBundle\\Entity\\Spooler' . "\0" . 'db', '' . "\0" . 'Arii\\CoreBundle\\Entity\\Spooler' . "\0" . 'smtp', '' . "\0" . 'Arii\\CoreBundle\\Entity\\Spooler' . "\0" . 'http', '' . "\0" . 'Arii\\CoreBundle\\Entity\\Spooler' . "\0" . 'https', '' . "\0" . 'Arii\\CoreBundle\\Entity\\Spooler' . "\0" . 'osjs', '' . "\0" . 'Arii\\CoreBundle\\Entity\\Spooler' . "\0" . 'supervisor', '' . "\0" . 'Arii\\CoreBundle\\Entity\\Spooler' . "\0" . 'primary', '' . "\0" . 'Arii\\CoreBundle\\Entity\\Spooler' . "\0" . 'site', '' . "\0" . 'Arii\\CoreBundle\\Entity\\Spooler' . "\0" . 'licence', '' . "\0" . 'Arii\\CoreBundle\\Entity\\Spooler' . "\0" . 'install_path', '' . "\0" . 'Arii\\CoreBundle\\Entity\\Spooler' . "\0" . 'user_path', '' . "\0" . 'Arii\\CoreBundle\\Entity\\Spooler' . "\0" . 'events', '' . "\0" . 'Arii\\CoreBundle\\Entity\\Spooler' . "\0" . 'os_target', '' . "\0" . 'Arii\\CoreBundle\\Entity\\Spooler' . "\0" . 'version', '' . "\0" . 'Arii\\CoreBundle\\Entity\\Spooler' . "\0" . 'install_date', '' . "\0" . 'Arii\\CoreBundle\\Entity\\Spooler' . "\0" . 'status', '' . "\0" . 'Arii\\CoreBundle\\Entity\\Spooler' . "\0" . 'status_date', '' . "\0" . 'Arii\\CoreBundle\\Entity\\Spooler' . "\0" . 'timezone', '' . "\0" . 'Arii\\CoreBundle\\Entity\\Spooler' . "\0" . 'remote');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Spooler $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setHostname($hostname)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHostname', array($hostname));

        return parent::setHostname($hostname);
    }

    /**
     * {@inheritDoc}
     */
    public function getHostname()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHostname', array());

        return parent::getHostname();
    }

    /**
     * {@inheritDoc}
     */
    public function setIp($ip)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIp', array($ip));

        return parent::setIp($ip);
    }

    /**
     * {@inheritDoc}
     */
    public function getIp()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIp', array());

        return parent::getIp();
    }

    /**
     * {@inheritDoc}
     */
    public function setPort($port)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPort', array($port));

        return parent::setPort($port);
    }

    /**
     * {@inheritDoc}
     */
    public function getPort()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPort', array());

        return parent::getPort();
    }

    /**
     * {@inheritDoc}
     */
    public function setType($type)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setType', array($type));

        return parent::setType($type);
    }

    /**
     * {@inheritDoc}
     */
    public function getType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getType', array());

        return parent::getType();
    }

    /**
     * {@inheritDoc}
     */
    public function setDbConnection($dbConnection)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDbConnection', array($dbConnection));

        return parent::setDbConnection($dbConnection);
    }

    /**
     * {@inheritDoc}
     */
    public function getDbConnection()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDbConnection', array());

        return parent::getDbConnection();
    }

    /**
     * {@inheritDoc}
     */
    public function setSmtpConnection($smtpConnection)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSmtpConnection', array($smtpConnection));

        return parent::setSmtpConnection($smtpConnection);
    }

    /**
     * {@inheritDoc}
     */
    public function getSmtpConnection()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSmtpConnection', array());

        return parent::getSmtpConnection();
    }

    /**
     * {@inheritDoc}
     */
    public function setLicence($licence)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLicence', array($licence));

        return parent::setLicence($licence);
    }

    /**
     * {@inheritDoc}
     */
    public function getLicence()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLicence', array());

        return parent::getLicence();
    }

    /**
     * {@inheritDoc}
     */
    public function setInstallPath($installPath)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setInstallPath', array($installPath));

        return parent::setInstallPath($installPath);
    }

    /**
     * {@inheritDoc}
     */
    public function getInstallPath()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInstallPath', array());

        return parent::getInstallPath();
    }

    /**
     * {@inheritDoc}
     */
    public function setUserPath($userPath)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUserPath', array($userPath));

        return parent::setUserPath($userPath);
    }

    /**
     * {@inheritDoc}
     */
    public function getUserPath()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserPath', array());

        return parent::getUserPath();
    }

    /**
     * {@inheritDoc}
     */
    public function setEvents($events)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEvents', array($events));

        return parent::setEvents($events);
    }

    /**
     * {@inheritDoc}
     */
    public function getEvents()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEvents', array());

        return parent::getEvents();
    }

    /**
     * {@inheritDoc}
     */
    public function setOsTarget($osTarget)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOsTarget', array($osTarget));

        return parent::setOsTarget($osTarget);
    }

    /**
     * {@inheritDoc}
     */
    public function getOsTarget()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOsTarget', array());

        return parent::getOsTarget();
    }

    /**
     * {@inheritDoc}
     */
    public function setConnection(\Arii\CoreBundle\Entity\Connection $connection = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setConnection', array($connection));

        return parent::setConnection($connection);
    }

    /**
     * {@inheritDoc}
     */
    public function getConnection()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getConnection', array());

        return parent::getConnection();
    }

    /**
     * {@inheritDoc}
     */
    public function setTransfer(\Arii\CoreBundle\Entity\Connection $transfer = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTransfer', array($transfer));

        return parent::setTransfer($transfer);
    }

    /**
     * {@inheritDoc}
     */
    public function getTransfer()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTransfer', array());

        return parent::getTransfer();
    }

    /**
     * {@inheritDoc}
     */
    public function setDb(\Arii\CoreBundle\Entity\Connection $db = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDb', array($db));

        return parent::setDb($db);
    }

    /**
     * {@inheritDoc}
     */
    public function getDb()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDb', array());

        return parent::getDb();
    }

    /**
     * {@inheritDoc}
     */
    public function setSmtp(\Arii\CoreBundle\Entity\Connection $smtp = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSmtp', array($smtp));

        return parent::setSmtp($smtp);
    }

    /**
     * {@inheritDoc}
     */
    public function getSmtp()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSmtp', array());

        return parent::getSmtp();
    }

    /**
     * {@inheritDoc}
     */
    public function setSupervisor(\Arii\CoreBundle\Entity\Spooler $supervisor = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSupervisor', array($supervisor));

        return parent::setSupervisor($supervisor);
    }

    /**
     * {@inheritDoc}
     */
    public function getSupervisor()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSupervisor', array());

        return parent::getSupervisor();
    }

    /**
     * {@inheritDoc}
     */
    public function setVersion($version)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVersion', array($version));

        return parent::setVersion($version);
    }

    /**
     * {@inheritDoc}
     */
    public function getVersion()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVersion', array());

        return parent::getVersion();
    }

    /**
     * {@inheritDoc}
     */
    public function setInstallDate($installDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setInstallDate', array($installDate));

        return parent::setInstallDate($installDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getInstallDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInstallDate', array());

        return parent::getInstallDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatus($status)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatus', array($status));

        return parent::setStatus($status);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatus', array());

        return parent::getStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatusDate($statusDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatusDate', array($statusDate));

        return parent::setStatusDate($statusDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatusDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatusDate', array());

        return parent::getStatusDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setClusterOptions($clusterOptions)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setClusterOptions', array($clusterOptions));

        return parent::setClusterOptions($clusterOptions);
    }

    /**
     * {@inheritDoc}
     */
    public function getClusterOptions()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getClusterOptions', array());

        return parent::getClusterOptions();
    }

    /**
     * {@inheritDoc}
     */
    public function setHttp(\Arii\CoreBundle\Entity\Connection $http = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHttp', array($http));

        return parent::setHttp($http);
    }

    /**
     * {@inheritDoc}
     */
    public function getHttp()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHttp', array());

        return parent::getHttp();
    }

    /**
     * {@inheritDoc}
     */
    public function setSite(\Arii\CoreBundle\Entity\Site $site = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSite', array($site));

        return parent::setSite($site);
    }

    /**
     * {@inheritDoc}
     */
    public function getSite()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSite', array());

        return parent::getSite();
    }

    /**
     * {@inheritDoc}
     */
    public function setHttps(\Arii\CoreBundle\Entity\Connection $https = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHttps', array($https));

        return parent::setHttps($https);
    }

    /**
     * {@inheritDoc}
     */
    public function getHttps()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHttps', array());

        return parent::getHttps();
    }

    /**
     * {@inheritDoc}
     */
    public function setTimezone($timezone)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTimezone', array($timezone));

        return parent::setTimezone($timezone);
    }

    /**
     * {@inheritDoc}
     */
    public function getTimezone()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTimezone', array());

        return parent::getTimezone();
    }

    /**
     * {@inheritDoc}
     */
    public function setScheduler($scheduler)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setScheduler', array($scheduler));

        return parent::setScheduler($scheduler);
    }

    /**
     * {@inheritDoc}
     */
    public function getScheduler()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getScheduler', array());

        return parent::getScheduler();
    }

    /**
     * {@inheritDoc}
     */
    public function setMember($member)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMember', array($member));

        return parent::setMember($member);
    }

    /**
     * {@inheritDoc}
     */
    public function getMember()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMember', array());

        return parent::getMember();
    }

    /**
     * {@inheritDoc}
     */
    public function setPrimary(\Arii\CoreBundle\Entity\Spooler $primary = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPrimary', array($primary));

        return parent::setPrimary($primary);
    }

    /**
     * {@inheritDoc}
     */
    public function getPrimary()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrimary', array());

        return parent::getPrimary();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', array($name));

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', array());

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription($description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', array($description));

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', array());

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setOsjs(\Arii\CoreBundle\Entity\Connection $osjs = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOsjs', array($osjs));

        return parent::setOsjs($osjs);
    }

    /**
     * {@inheritDoc}
     */
    public function getOsjs()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOsjs', array());

        return parent::getOsjs();
    }

    /**
     * {@inheritDoc}
     */
    public function setRemote($remote)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRemote', array($remote));

        return parent::setRemote($remote);
    }

    /**
     * {@inheritDoc}
     */
    public function getRemote()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRemote', array());

        return parent::getRemote();
    }

}
